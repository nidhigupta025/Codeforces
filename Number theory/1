Oz has a list arr[] of M integers. He has to find all integers K such that :

1) K > 1
2) arr[1]%K = arr[2]%K = arr[3]%K = ... = arr[M]%K where '%' is a modulus operator
Help Oz to find all such K's.

Topic tag: modulus, gcd

#include <bits/stdc++.h>
using namespace std;
#define pm(i,m)  for(auto i: m) cout<<i.first<<" "<<i.second<<"\n";
#define form(i,m)  for(auto i: m)
#define forr(i,n) for(int i=0;i<n;i++)
#define forl(i,n) for(int i=n-1;i>=0;i--)
#define vi vector<int>
#define vp vector<pair<int,int>>
#define p pair<int,int> 
#define mapp map<int,int>
#define sett set<int>
#define pb push_back
#define ll long long
#define lli long long int
#define dob double
#define inf (int)(1e18)
#define mod 1000000007
#define mem(a,i) memset(a,i,sizeof(a))
#define imin INT_MIN
#define imax INT_MAX
#define nl cout<<"\n";
int gcd(int a,int b)
{
	if(b==0) return a;
	if(a%b==0)return b;
	return gcd(b,a%b);
}
int main() 
{
    int t;
    cin>>t;
    int a[t];
    for(int i=0;i<t;i++)
	{
		cin>>a[i];
	}
	int gc=abs(a[0]-a[1]);
	for(int i=1;i<t-1;i++)
	{ 
	    gc=gcd(gc,abs(a[i]-a[i+1]));
	}
	vector<int>ans;
    for(int i=2;i*i<=gc;i++)
	{
	    if(gc%i==0)
	    {	ans.pb(i); 
		    if(i*i!=gc)	
		    ans.pb(gc/i);
		}
	} 	
	ans.pb(gc);
	sort(ans.begin(),ans.end());
	for(auto i:ans)
	cout<<i<<" ";
}
